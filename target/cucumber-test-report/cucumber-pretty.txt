Feature: Invalid login function of www.heatclinic.com

  @FunctionalTest @SmokeTest
  Scenario Outline: Testing the login functionality for invalid users # src/test/resources/TestResource/Features/Invalidlogin.feature:5
    Given Invalid User opens browser
    When Invalid User goes to "https://demo.broadleafcommerce.org/" website
    Then Invalid User hovers to sign_in_link
    Then Invalid User clicks sign_in_link
    Then Invalid User enters <username> as username
    Then Invalid User enters <password> as password
    Then Invalid User clicks on submit button
    Then Invalid User gets failed login message
    Then Invalid User closes browser

    Examples: 

  @FunctionalTest @SmokeTest
  Scenario Outline: Testing the login functionality for invalid users       # src/test/resources/TestResource/Features/Invalidlogin.feature:19
    Given Invalid User opens browser                                        # Invalidlogin.invalid_user_opens_browser()
    When Invalid User goes to "https://demo.broadleafcommerce.org/" website # Invalidlogin.invalid_user_goes_to_website(String)
    Then Invalid User hovers to sign_in_link                                # Invalidlogin.invalid_user_hovers_to_sign_in_link()
    Then Invalid User clicks sign_in_link                                   # Invalidlogin.invalid_user_clicks_sign_in_link()
    Then Invalid User enters "moltenboy.robin@gmail.com" as username        # Invalidlogin.invalid_User_enters_as_username(String)
    Then Invalid User enters "123456789" as password                        # Invalidlogin.invalid_User_enters_as_password(String)
    Then Invalid User clicks on submit button                               # Invalidlogin.invalid_User_clicks_on_submit_button()
    Then Invalid User gets failed login message                             # Invalidlogin.invalid_user_gets_failed_login_message()
    Then Invalid User closes browser                                        # Invalidlogin.invalid_user_closes_browser()

  @FunctionalTest @SmokeTest
  Scenario Outline: Testing the login functionality for invalid users       # src/test/resources/TestResource/Features/Invalidlogin.feature:20
    Given Invalid User opens browser                                        # Invalidlogin.invalid_user_opens_browser()
    When Invalid User goes to "https://demo.broadleafcommerce.org/" website # Invalidlogin.invalid_user_goes_to_website(String)
    Then Invalid User hovers to sign_in_link                                # Invalidlogin.invalid_user_hovers_to_sign_in_link()
    Then Invalid User clicks sign_in_link                                   # Invalidlogin.invalid_user_clicks_sign_in_link()
    Then Invalid User enters "moltenboy@gmail.com" as username              # Invalidlogin.invalid_User_enters_as_username(String)
    Then Invalid User enters "A1234567@" as password                        # Invalidlogin.invalid_User_enters_as_password(String)
    Then Invalid User clicks on submit button                               # Invalidlogin.invalid_User_clicks_on_submit_button()
    Then Invalid User gets failed login message                             # Invalidlogin.invalid_user_gets_failed_login_message()
    Then Invalid User closes browser                                        # Invalidlogin.invalid_user_closes_browser()

  @FunctionalTest @SmokeTest
  Scenario Outline: Testing the login functionality for invalid users       # src/test/resources/TestResource/Features/Invalidlogin.feature:21
    Given Invalid User opens browser                                        # Invalidlogin.invalid_user_opens_browser()
    When Invalid User goes to "https://demo.broadleafcommerce.org/" website # Invalidlogin.invalid_user_goes_to_website(String)
    Then Invalid User hovers to sign_in_link                                # Invalidlogin.invalid_user_hovers_to_sign_in_link()
    Then Invalid User clicks sign_in_link                                   # Invalidlogin.invalid_user_clicks_sign_in_link()
    Then Invalid User enters "moltenboy@gmail.com" as username              # Invalidlogin.invalid_User_enters_as_username(String)
    Then Invalid User enters "" as password                                 # Invalidlogin.invalid_User_enters_as_password(String)
    Then Invalid User clicks on submit button                               # Invalidlogin.invalid_User_clicks_on_submit_button()
    Then Invalid User gets failed login message                             # Invalidlogin.invalid_user_gets_failed_login_message()
    Then Invalid User closes browser                                        # Invalidlogin.invalid_user_closes_browser()

  @FunctionalTest @SmokeTest
  Scenario Outline: Testing the login functionality for invalid users       # src/test/resources/TestResource/Features/Invalidlogin.feature:22
    Given Invalid User opens browser                                        # Invalidlogin.invalid_user_opens_browser()
    When Invalid User goes to "https://demo.broadleafcommerce.org/" website # Invalidlogin.invalid_user_goes_to_website(String)
    Then Invalid User hovers to sign_in_link                                # Invalidlogin.invalid_user_hovers_to_sign_in_link()
    Then Invalid User clicks sign_in_link                                   # Invalidlogin.invalid_user_clicks_sign_in_link()
    Then Invalid User enters "" as username                                 # Invalidlogin.invalid_User_enters_as_username(String)
    Then Invalid User enters "A1234567@" as password                        # Invalidlogin.invalid_User_enters_as_password(String)
    Then Invalid User clicks on submit button                               # Invalidlogin.invalid_User_clicks_on_submit_button()
    Then Invalid User gets failed login message                             # Invalidlogin.invalid_user_gets_failed_login_message()
    Then Invalid User closes browser                                        # Invalidlogin.invalid_user_closes_browser()
